

-- MySQL Script generated by MySQL Workbench
-- Mon Nov 20 11:15:39 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema farmacia
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema farmacia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `farmacia` DEFAULT CHARACTER SET utf8 ;
USE `farmacia` ;

-- -----------------------------------------------------
-- Table `farmacia`.`elemento_quimico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `farmacia`.`elemento_quimico` (
  `idelemento_quimico` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `numero_atomico` INT NOT NULL,
  `massa_atomica` FLOAT NOT NULL,
  `densidade` INT NOT NULL,
  `estado_fisico` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idelemento_quimico`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `farmacia`.`formula`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `farmacia`.`formula` (
  `idformula` INT NOT NULL,
  `ingrediente_ativo` VARCHAR(45) NOT NULL,
  `concentracao_ingrediente_ativo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idformula`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `farmacia`.`elemento_quimico_has_formula`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `farmacia`.`elemento_quimico_has_formula` (
  `elemento_quimico_idelemento_quimico` INT NOT NULL,
  `formula_idformula` INT NOT NULL,
  PRIMARY KEY (`elemento_quimico_idelemento_quimico`, `formula_idformula`),
  INDEX `fk_elemento_quimico_has_formula_formula1_idx` (`formula_idformula` ASC) VISIBLE,
  INDEX `fk_elemento_quimico_has_formula_elemento_quimico_idx` (`elemento_quimico_idelemento_quimico` ASC) VISIBLE,
  CONSTRAINT `fk_elemento_quimico_has_formula_elemento_quimico`
    FOREIGN KEY (`elemento_quimico_idelemento_quimico`)
    REFERENCES `farmacia`.`elemento_quimico` (`idelemento_quimico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_elemento_quimico_has_formula_formula1`
    FOREIGN KEY (`formula_idformula`)
    REFERENCES `farmacia`.`formula` (`idformula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `farmacia`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `farmacia`.`produto` (
  `idproduto` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `efeito` VARCHAR(45) NOT NULL,
  `interacoes_medicamentosas` VARCHAR(45) NOT NULL,
  `farmacocinetica` VARCHAR(45) NOT NULL,
  `farmacodinamica` VARCHAR(45) NOT NULL,
  `FK_formula_idformula` INT NOT NULL,
  PRIMARY KEY (`idproduto`),
  INDEX `fk_produto_formula1_idx` (`FK_formula_idformula` ASC) VISIBLE,
  CONSTRAINT `fk_produto_formula1`
    FOREIGN KEY (`FK_formula_idformula`)
    REFERENCES `farmacia`.`formula` (`idformula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `farmacia`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `farmacia`.`cliente` (
  `idcliente` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `cpf` VARCHAR(15) NOT NULL,
  `idade` INT NOT NULL,
  PRIMARY KEY (`idcliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `farmacia`.`compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `farmacia`.`compra` (
  `idcompra` INT NOT NULL,
  `valor` VARCHAR(45) NOT NULL,
  `FK_produto_idproduto` INT NOT NULL,
  `FK_cliente_idcliente` INT NOT NULL,
  PRIMARY KEY (`idcompra`),
  INDEX `fk_compra_produto1_idx` (`FK_produto_idproduto` ASC) VISIBLE,
  INDEX `fk_compra_cliente1_idx` (`FK_cliente_idcliente` ASC) VISIBLE,
  CONSTRAINT `fk_compra_produto1`
    FOREIGN KEY (`FK_produto_idproduto`)
    REFERENCES `farmacia`.`produto` (`idproduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_compra_cliente1`
    FOREIGN KEY (`FK_cliente_idcliente`)
    REFERENCES `farmacia`.`cliente` (`idcliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- INSERTS

INSERT INTO `farmacia`.`elemento_quimico` (`idelemento_quimico`, `nome`, `numero_atomico`, `massa_atomica`, `densidade`, `estado_fisico`) 
VALUES 
(1, 'Hidrogênio', 1, 1.008, 0.08988, 'Gasoso'),
(2, 'Oxigênio', 8, 16.00, 0.001429, 'Gasoso'),
(3, 'Carbono', 6, 12.01, 2.267, 'Sólido'),
(4, 'Sódio', 11, 22.99, 0.971, 'Sólido'),
(5, 'Cloro', 17, 35.45, 0.003214, 'Gasoso'),
(6, 'Ferro', 26, 55.85, 7.874, 'Sólido');


INSERT INTO `farmacia`.`formula` (`idformula`, `ingrediente_ativo`, `concentracao_ingrediente_ativo`) 
VALUES 
(1, 'Paracetamol', '500 mg'),
(2, 'Ibuprofeno', '200 mg'),
(3, 'Aspirina', '300 mg'),
(4, 'Omeprazol', '20 mg'),
(5, 'Amoxicilina', '250 mg'),
(6, 'Dipirona', '1000 mg');


INSERT INTO `farmacia`.`elemento_quimico_has_formula` (`elemento_quimico_idelemento_quimico`, `formula_idformula`) 
VALUES 
-- Hidrogênio está na fórmula 1 (Paracetamol)
(1, 1), 
-- Oxigênio está na fórmula 2 (Ibuprofeno)
(2, 2),
-- Carbono está na fórmula 3 (Aspirina)
(3, 3),
-- Sódio está na fórmula 4 (Omeprazol)
(4, 4),
-- Cloro está na fórmula 5 (Amoxicilina)
(5, 5),
-- Ferro está na fórmula 6 (Dipirona)
(6, 6);


INSERT INTO `farmacia`.`produto` (`idproduto`, `nome`, `efeito`, `interacoes_medicamentosas`, `farmacocinetica`, `farmacodinamica`, `FK_formula_idformula`) 
VALUES 
(1, 'Tylenol', 'Alívio da dor', 'Nenhuma conhecida', 'Absorção rápida', 'Inibe a prostaglandina', 1),
(2, 'Advil', 'Alívio da inflamação', 'Evite com anticoagulantes', 'Absorção rápida', 'Inibe a COX', 2),
(3, 'Aspirina Bayer', 'Analgésico e anti-inflamatório', 'Evite com antiácidos', 'Absorção rápida', 'Inibe a COX', 3),
(4, 'Omeprazol', 'Redução de ácido estomacal', 'Evite com clopidogrel', 'Absorção lenta', 'Inibe a bomba de prótons', 4),
(5, 'Amoxil', 'Antibiótico', 'Evite com probióticos', 'Absorção rápida', 'Inibe a parede celular bacteriana', 5),
(6, 'Novalgina', 'Analgésico e antipirético', 'Não use com álcool', 'Absorção rápida', 'Inibe a síntese de prostaglandinas', 6);


INSERT INTO `farmacia`.`cliente` (`idcliente`, `nome`, `cpf`, `idade`) 
VALUES 
(1, 'Ana Souza', '123.456.789-01', 25),
(2, 'Pedro Lima', '987.654.321-09', 35),
(3, 'Mariana Santos', '111.222.333-44', 40),
(4, 'Rafael Pereira', '555.666.777-88', 28),
(5, 'Juliana Oliveira', '999.888.777-66', 50),
(6, 'Lucas Martins', '333.444.555-66', 22);

INSERT INTO `farmacia`.`compra` (`idcompra`, `valor`, `FK_produto_idproduto`, `FK_cliente_idcliente`) 
VALUES 
(1, '25.00', 1, 1),
(2, '18.50', 2, 2),
(3, '15.80', 3, 3),
(4, '30.20', 4, 4),
(5, '22.50', 5, 5),
(6, '12.75', 6, 6);

select valor, nome from compra inner join cliente on cliente.idcliente = compra.FK_cliente_idcliente;

select valor, nome from compra inner join produto on compra.FK_produto_idproduto = produto.idproduto;


